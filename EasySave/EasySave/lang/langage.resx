<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="add_newJob" xml:space="preserve">
    <value>Add new Job</value>
  </data>
  <data name="allJobCompleted" xml:space="preserve">
    <value>All the jobs are done !</value>
  </data>
  <data name="btn_add" xml:space="preserve">
    <value>add</value>
  </data>
  <data name="btn_delete" xml:space="preserve">
    <value>delete</value>
  </data>
  <data name="btn_edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="btn_save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="error_add_encrypt" xml:space="preserve">
    <value>This extension is already in the list</value>
  </data>
  <data name="error_add_format" xml:space="preserve">
    <value>Invalid extension format. Please enter the extension starting with a dot.</value>
  </data>
  <data name="error_Caract" xml:space="preserve">
    <value>Error : Illegal character or unknown number.</value>
  </data>
  <data name="error_CaractValid" xml:space="preserve">
    <value>Error : Illegal character. Write "Y" for yes, or "N" for no.</value>
  </data>
  <data name="error_index" xml:space="preserve">
    <value>Error : The start index must be less than the end index.</value>
  </data>
  <data name="error_JobInferior" xml:space="preserve">
    <value>Error : the job index cannot be &lt; 0</value>
  </data>
  <data name="error_listCaract" xml:space="preserve">
    <value>Error : Illegal character or there must only be two indices separated by \"-\".</value>
  </data>
  <data name="error_Loading" xml:space="preserve">
    <value>Error : during loading :</value>
  </data>
  <data name="error_NoneCodeBackup" xml:space="preserve">
    <value>Error : BackUpMode code not recognised</value>
  </data>
  <data name="error_NoneDestPath" xml:space="preserve">
    <value>Error : Invalid destination value</value>
  </data>
  <data name="error_NoneSourcePath" xml:space="preserve">
    <value>Error : Invalid source value</value>
  </data>
  <data name="error_NoneValidJob" xml:space="preserve">
    <value>Error : Invalid job name.</value>
  </data>
  <data name="error_notepad_open" xml:space="preserve">
    <value>Error : Unable to run Job, notepad application open in background</value>
  </data>
  <data name="error_save" xml:space="preserve">
    <value>Error : when saving :</value>
  </data>
  <data name="error_saveComplete" xml:space="preserve">
    <value>Error : during full backup :</value>
  </data>
  <data name="error_saveDifferential" xml:space="preserve">
    <value>Error : during differential backup</value>
  </data>
  <data name="error_SourcePath_NotFound" xml:space="preserve">
    <value>Error : The source directory does not exist or could not be found :</value>
  </data>
  <data name="error_suppresion" xml:space="preserve">
    <value>Error : Unable to delete</value>
  </data>
  <data name="error_title" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="error_UnknowCmd" xml:space="preserve">
    <value>Error : Unknown order</value>
  </data>
  <data name="error_UnknowSaisie" xml:space="preserve">
    <value>Error : Value entered not recognised</value>
  </data>
  <data name="error_ValueNbKo" xml:space="preserve">
    <value>You can only enter a positive number without a decimal point</value>
  </data>
  <data name="exe_job_title" xml:space="preserve">
    <value>Job execution</value>
  </data>
  <data name="ext_crypt" xml:space="preserve">
    <value>Extension to crypt</value>
  </data>
  <data name="ext_prio" xml:space="preserve">
    <value>Priority extensions</value>
  </data>
  <data name="jobNotRunning" xml:space="preserve">
    <value>the job has not been started</value>
  </data>
  <data name="label_nbKo" xml:space="preserve">
    <value>number of Ko</value>
  </data>
  <data name="lang" xml:space="preserve">
    <value>Type of lang :</value>
  </data>
  <data name="log_Type" xml:space="preserve">
    <value>Type of Log :</value>
  </data>
  <data name="msgbox_save" xml:space="preserve">
    <value>settings have been saved successfully ! </value>
  </data>
  <data name="nameJob" xml:space="preserve">
    <value>Name of the job :</value>
  </data>
  <data name="pauseAll" xml:space="preserve">
    <value>Pause all</value>
  </data>
  <data name="release" xml:space="preserve">
    <value>Release Note</value>
  </data>
  <data name="runAll" xml:space="preserve">
    <value>Run all</value>
  </data>
  <data name="sameTargetDirectoryError" xml:space="preserve">
    <value>you can’t select the same target folder as another job</value>
  </data>
  <data name="select_folder" xml:space="preserve">
    <value>Select a folder </value>
  </data>
  <data name="sourceDir" xml:space="preserve">
    <value>Source directory :</value>
  </data>
  <data name="state_Type" xml:space="preserve">
    <value>Type of State :</value>
  </data>
  <data name="stopAll" xml:space="preserve">
    <value>Stop all</value>
  </data>
  <data name="targetDir" xml:space="preserve">
    <value>Target directory :</value>
  </data>
  <data name="title_addJob" xml:space="preserve">
    <value>Add a Job</value>
  </data>
  <data name="title_home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="title_listJob" xml:space="preserve">
    <value>List of Jobs</value>
  </data>
  <data name="title_log" xml:space="preserve">
    <value>Logs</value>
  </data>
  <data name="title_setting" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="type" xml:space="preserve">
    <value>Type of save :</value>
  </data>
  <data name="typeComplete" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="typeDifferential" xml:space="preserve">
    <value>Differential</value>
  </data>
  <data name="userManual" xml:space="preserve">
    <value>User Manual</value>
  </data>
  <data name="view_add_AffichJobIsAdd" xml:space="preserve">
    <value>Job Add</value>
  </data>
  <data name="view_add_AffichJobIsNoAdd" xml:space="preserve">
    <value>Job No Add</value>
  </data>
  <data name="view_add_complet" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="view_add_confirm" xml:space="preserve">
    <value>&gt; Confirm job creation (Y/N)</value>
  </data>
  <data name="view_add_destPath" xml:space="preserve">
    <value>&gt; Target directory address :</value>
  </data>
  <data name="view_add_diff" xml:space="preserve">
    <value>Differential</value>
  </data>
  <data name="view_add_modComplet" xml:space="preserve">
    <value>(1) - Full mode</value>
  </data>
  <data name="view_add_modDiff" xml:space="preserve">
    <value>(2) - Differential mode</value>
  </data>
  <data name="view_add_name" xml:space="preserve">
    <value>&gt; Job name :</value>
  </data>
  <data name="view_add_sameNameJob" xml:space="preserve">
    <value>A job with the same name already exists.</value>
  </data>
  <data name="view_add_SelectMod" xml:space="preserve">
    <value>&gt; Select backup mode :</value>
  </data>
  <data name="view_add_sourcePath" xml:space="preserve">
    <value>&gt; Source directory address :</value>
  </data>
  <data name="view_CantDestPath_1" xml:space="preserve">
    <value>The drive specified in the target path</value>
  </data>
  <data name="view_CantDestPath_2" xml:space="preserve">
    <value>Is not available.</value>
  </data>
  <data name="view_ExecutionTime" xml:space="preserve">
    <value>Execution time :</value>
  </data>
  <data name="view_exe_successful" xml:space="preserve">
    <value>Successful job execution!</value>
  </data>
  <data name="view_jobMax" xml:space="preserve">
    <value>The maximum number of jobs has been reached.</value>
  </data>
  <data name="view_menu_add" xml:space="preserve">
    <value>(add) - Add a job</value>
  </data>
  <data name="view_menu_affichAll" xml:space="preserve">
    <value>Open all</value>
  </data>
  <data name="view_menu_affichExit" xml:space="preserve">
    <value>Exit program</value>
  </data>
  <data name="view_menu_all" xml:space="preserve">
    <value>(all) - Sequential execution</value>
  </data>
  <data name="view_menu_allCmd" xml:space="preserve">
    <value>Start (S) Modify (M) Delete (D)</value>
  </data>
  <data name="view_menu_chainSplit1" xml:space="preserve">
    <value>The string has been split using ','.</value>
  </data>
  <data name="view_menu_chainSplit2" xml:space="preserve">
    <value>The string has been split using '-' characters</value>
  </data>
  <data name="view_menu_exe" xml:space="preserve">
    <value>Execution of job number :</value>
  </data>
  <data name="view_menu_exit" xml:space="preserve">
    <value>(exit) - Exit the software</value>
  </data>
  <data name="view_menu_lang" xml:space="preserve">
    <value>(lang) - Change language</value>
  </data>
  <data name="view_menu_nameJob" xml:space="preserve">
    <value>Job</value>
  </data>
  <data name="view_menu_openJob" xml:space="preserve">
    <value>Open a backup job</value>
  </data>
  <data name="view_menu_param" xml:space="preserve">
    <value>(param) - Parameters</value>
  </data>
  <data name="view_modif" xml:space="preserve">
    <value>Modification of job number :</value>
  </data>
  <data name="view_modif_affich" xml:space="preserve">
    <value>Select what you wanted to change and enter the new data:</value>
  </data>
  <data name="view_modif_apply" xml:space="preserve">
    <value>(apply) - Apply modification</value>
  </data>
  <data name="view_modif_destPath" xml:space="preserve">
    <value>(3) Target directory address :</value>
  </data>
  <data name="view_modif_exit" xml:space="preserve">
    <value>(exit) - Return to menu</value>
  </data>
  <data name="view_modif_modAffich" xml:space="preserve">
    <value>(4) Backup mode (1-Complete / 2-Differential) :</value>
  </data>
  <data name="view_modif_name" xml:space="preserve">
    <value>(1) Job name :</value>
  </data>
  <data name="view_modif_sourcePath" xml:space="preserve">
    <value>(2) Source directory address :</value>
  </data>
  <data name="view_NoneTypeSave" xml:space="preserve">
    <value>Invalid backup type</value>
  </data>
  <data name="view_open1" xml:space="preserve">
    <value>Open backup job 1</value>
  </data>
  <data name="view_open2" xml:space="preserve">
    <value>Open backup job 2</value>
  </data>
  <data name="view_open3" xml:space="preserve">
    <value>Open backup job 3</value>
  </data>
  <data name="view_open4" xml:space="preserve">
    <value>Open backup job 4</value>
  </data>
  <data name="view_open5" xml:space="preserve">
    <value>Open backup job 5</value>
  </data>
  <data name="view_param_AffichJSON" xml:space="preserve">
    <value>The format for saving Logs and States files has been changed to .JSON</value>
  </data>
  <data name="view_param_AffichXML" xml:space="preserve">
    <value>The format for saving Logs and States files has been changed to .XML</value>
  </data>
  <data name="view_param_json" xml:space="preserve">
    <value>(1) - .JSON</value>
  </data>
  <data name="view_param_titre" xml:space="preserve">
    <value>Save Logs and States files in :</value>
  </data>
  <data name="view_param_xml" xml:space="preserve">
    <value>(2) - .XML</value>
  </data>
  <data name="view_saveComplete" xml:space="preserve">
    <value>Full backup successful.</value>
  </data>
  <data name="view_SaveDifferential" xml:space="preserve">
    <value>Differential backup successful.</value>
  </data>
  <data name="view_SourcePathEmpty" xml:space="preserve">
    <value>The source directory is empty:</value>
  </data>
  <data name="view_suppr" xml:space="preserve">
    <value>Delete job number :</value>
  </data>
  <data name="view_supp_AffichJobIsNoSupp" xml:space="preserve">
    <value>Job No Delete</value>
  </data>
  <data name="view_supp_AffichJobIsSupp" xml:space="preserve">
    <value>Job Delete</value>
  </data>
  <data name="view_supp_confirm" xml:space="preserve">
    <value>&gt; Do you want to delete this job (Y/N)</value>
  </data>
  <data name="view_supp_title" xml:space="preserve">
    <value>Confirmation of deletion</value>
  </data>
  <data name="view_UnknowSourcePath" xml:space="preserve">
    <value>The source directory does not exist or could not be found :</value>
  </data>
  <data name="view_waitingAswer" xml:space="preserve">
    <value>&gt; </value>
  </data>
</root>